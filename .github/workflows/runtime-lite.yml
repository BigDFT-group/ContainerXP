name: runtime-lite
on: [workflow_dispatch, push]
jobs:
    build:
        runs-on: ubuntu-20.04
        if: "contains(github.event.head_commit.message, 'lite')"
        strategy:
            matrix:
                arch: [linux/arm64, linux/amd64]
        services:
          registry:
            image: registry:2
            ports:
              - 5000:5000
        steps:
        -   uses: actions/checkout@v2
        -   name: Set up QEMU
            uses: docker/setup-qemu-action@v1
            with:
                platforms: all
        -   name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v1
            with:
                version: latest
                driver-opts: network=host
        -   name: Set up docker-slim
            run: |
                wget https://downloads.dockerslim.com/releases/1.34.0/dist_linux.tar.gz
                tar xzf dist_linux.tar.gz
                mv dist_linux docker-slim
        -   name: Login to DockerHub Registry
            run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        -   name: Build the tag
            id: tag
            run: |
                if [ ${{ matrix.arch }} == "linux/arm64" ]; then
                    echo ::set-output name=tag::$(echo "latest_arm")
                    echo ::set-output name=image::$(echo "bigdft/runtime-lite:latest_arm")
                else
                    echo ::set-output name=tag::$(echo "latest_amd64")
                    echo ::set-output name=image::$(echo "localhost:5000/bigdft/runtime-slim:latest_amd64")
                fi   
        -   name: Build image and send it to local repo
            uses: docker/build-push-action@v2
            with:
                push: true
                tags: ${{steps.tag.outputs.image}}
                context: Dockerfiles
                file: Dockerfiles/Dockerfile
                platforms: ${{ matrix.arch }}
        -   name: Build the Docker image
            run: |
                if [ ${{ matrix.arch }} == "linux/amd64" ]; then
                  docker pull ${{steps.tag.outputs.image}}
                  ./docker-slim/docker-slim build --target ${{steps.tag.outputs.image}} --tag bigdft/runtime-lite:${{steps.tag.outputs.tag}} --http-probe=false --continue-after 1 --include-bin /usr/bin/rsh --include-bin /usr/bin/mpirun --include-bin /lib/x86_64-linux-gnu/libudev.so.1 --include-path=/usr/share/openmpi --include-path /usr/lib/x86_64-linux-gnu/openmpi/lib/openmpi3/
                  docker push bigdft/runtime-lite:${{steps.tag.outputs.tag}}
                fi
    manifest:
        runs-on: ubuntu-20.04
        needs: build
        steps:
        -   uses: actions/checkout@v2
        -   name: Login to DockerHub Registry
            run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        -   name: Update manifest for bigdft-lite to attach arm and x86_64 versions on a single image
            run: |
                export DOCKER_CLI_EXPERIMENTAL=enabled
                docker manifest create --amend bigdft/runtime-lite:latest bigdft/runtime-lite:latest_arm bigdft/runtime-lite:latest_amd64
                docker manifest push --purge bigdft/runtime-lite:latest
