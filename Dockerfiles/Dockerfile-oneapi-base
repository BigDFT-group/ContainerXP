FROM intel/oneapi AS base
LABEL maintainer bigdft-developers@lists.launchpad.net

RUN wget https://registrationcenter-download.intel.com/akdlm/IRC_NAS/063bda92-d923-4acd-8745-c40090f05217/intelpython3-2024.1.0_814-Linux-x86_64.sh
ENV INTELPYTHON /opt/intel/oneapi/intelpython3 

RUN sh intelpython3-2024.1.0_814-Linux-x86_64.sh -b -p $INTELPYTHON

ENV PYTHON $INTELPYTHON/bin/python3
ENV PATH "$INTELPYTHON/bin:$PATH"

#install needed dependencies
RUN apt update || true && \
    apt-get install -y \
    autoconf curl libpcre3-dev git doxygen zlib1g-dev libbz2-dev gettext libmount-dev bison flex libfreetype6-dev intltool libtool git-lfs intel-hpckit

ENV I_MPI_FABRICS shm

RUN git config --global user.email "bigdft-project@gmail.com"
RUN git config --global user.name "BigDFT developer"
RUN git lfs install

WORKDIR /opt/bigdft

ENV BIGDFT_SUITE_SOURCES /opt/bigdft/sources

ENV JHBUILD_RUN_AS_ROOT "please do it"

FROM base AS precompile

ENV BIGDFT_SUITE_TARBALLDIR /opt/bigdft/bigdft-upstream-tarballs

#RUN git clone --depth 1 -b total https://gitlab.com/l_sim/bigdft-upstream-tarballs.git $BIGDFT_SUITE_TARBALLDIR

ENV CONTAINER_DATE 22-06-10

RUN git clone --depth 1 -b devel https://gitlab.com/l_sim/bigdft-suite.git $BIGDFT_SUITE_SOURCES

ENV JHBUILD_COMMAND "$PYTHON $BIGDFT_SUITE_SOURCES/bundler/jhbuild.py"

ENV BIGDFT_SUITE_CHECKOUTROOT /opt/bigdft/checkoutdir

RUN mkdir -p $BIGDFT_SUITE_CHECKOUTROOT

FROM precompile AS prebase

RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream-base.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules --conditions=+cython3 build PyYAML
RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream-base.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules --conditions=+cython3 clean PyYAML

FROM prebase AS basesdk

RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules setup GaIn  libxc
RUN cd $BIGDFT_SUITE_CHECKOUTROOT/GaIn-1.0 && autoreconf -fi && cd -
RUN cd $BIGDFT_SUITE_CHECKOUTROOT/libxc && autoreconf -fi && cd -

RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream-base.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules build
RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream-base.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules clean

#RUN $JHBUILD_COMMAND --conditions=+no_intel_gpu -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules build dbfft
#RUN $JHBUILD_COMMAND --conditions=+no_intel_gpu -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules clean dbfft

FROM basesdk as siriussdk

RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-sirius.rc -m $BIGDFT_SUITE_SOURCES/modulesets/sirius.modules build
RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-sirius.rc -m $BIGDFT_SUITE_SOURCES/modulesets/sirius.modules clean

FROM precompile as pygobject

RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-pygobject.rc -m $BIGDFT_SUITE_SOURCES/modulesets/gnome.modules build
RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-pygobject.rc -m $BIGDFT_SUITE_SOURCES/modulesets/gnome.modules clean

FROM precompile as boost

RUN export PYTHON_INCLUDE=`$PYTHON-config --includes | awk '{print $1}' | sed s/-I//g` && export PYTHON_VERSION=`$PYTHON -c 'import sys; print(".".join(map(str, sys.version_info[:2])))'` && echo "\n    using python \n     : $PYTHON_VERSION       \n     : $PYTHON \n     : $PYTHON_INCLUDE  \n     : $INTELPYTHON/lib  \n     ; \n " > $BIGDFT_SUITE_CHECKOUTROOT/boost-user-config.jam

RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules build boost swig
RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules clean boost swig

FROM boost as simulation

RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules build simgrid-dev
RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules clean simgrid-dev

FROM prebase as baseclientsdk

RUN $INTELPYTHON/bin/pip install networkx seaborn pillow python-constraint tinydb parmed lxml pint typing-extensions importlib_resources cachetools

RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules build dill ase pyspglib client-bio-baseplugins
RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules clean dill ase pyspglib client-bio-baseplugins

FROM precompile as vdw

RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/vdw.modules build s-dftd3
RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/vdw.modules clean s-dftd3

FROM boost as bioone

RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules build rdkit openbabel
RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules clean rdkit openbabel

FROM baseclientsdk as biotwo

COPY --from=bioone /opt/upstream/ /opt/upstream/
COPY --from=boost /opt/upstream/ /opt/upstream/
COPY --from=boost $BIGDFT_SUITE_TARBALLDIR/ $BIGDFT_SUITE_TARBALLDIR/

RUN DEBIAN_FRONTEND="noninteractive" TZ="Europe/Paris" apt install -y python3-tk
RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules build pdbfixer #openmmforcefields
RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules clean pdbfixer #openmm ambertools

FROM basesdk AS coresdk

COPY --from=siriussdk /opt/upstream/ /opt/upstream/
COPY --from=siriussdk $BIGDFT_SUITE_TARBALLDIR/ $BIGDFT_SUITE_TARBALLDIR/

COPY --from=pygobject /opt/upstream/ /opt/upstream/
COPY --from=pygobject $BIGDFT_SUITE_TARBALLDIR/ $BIGDFT_SUITE_TARBALLDIR/

COPY --from=simulation /opt/upstream/ /opt/upstream/
COPY --from=simulation $BIGDFT_SUITE_TARBALLDIR/ $BIGDFT_SUITE_TARBALLDIR/

RUN echo "\n\
cd /opt/bigdft; python3 /opt/bigdft/sources/Installer.py build -f oneapi-hpc.rc -y; cd -\n\
" > /bin/compile_bigdft-suite.sh

RUN chmod +x /bin/compile_bigdft-suite.sh

# RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules  build core-upstream-suite

FROM  baseclientsdk AS clientsdk

COPY --from=vdw /opt/upstream/ /opt/upstream/
COPY --from=vdw $BIGDFT_SUITE_TARBALLDIR/ $BIGDFT_SUITE_TARBALLDIR/

COPY --from=bioone /opt/upstream/ /opt/upstream/
COPY --from=bioone $BIGDFT_SUITE_TARBALLDIR/ $BIGDFT_SUITE_TARBALLDIR/

COPY --from=biotwo /opt/upstream/ /opt/upstream/
COPY --from=biotwo $BIGDFT_SUITE_TARBALLDIR/ $BIGDFT_SUITE_TARBALLDIR/

FROM clientsdk AS sdk

#install needed dependencies
RUN apt update || true && \
    apt-get install -y \
    gdb valgrind vim graphviz sshpass intel-opencl-icd intel-oneapi-dpcpp-ct

RUN apt-get install rsync --no-install-recommends -y

EXPOSE 8888

RUN pip install jupyterlab py3dmol xlrd openpyxl mplcursors clustergrammer_widget remotemanager networkx seaborn pillow python-constraint tinydb parmed lxml pint typing-extensions importlib_resources cachetools cairosvg pubchempy propka bokeh

#RUN for f in /opt/intel/oneapi/intelpython/python3.9/lib/*tinfo.*; do mv $f $f.bak;done

RUN echo "\n\ 
   source /opt/bigdft/install/bin/bigdftvars.sh\n\
   ulimit -s unlimited\n\
   jupyter-lab --ip=0.0.0.0 --allow-root --NotebookApp.token=bigdft --no-browser\n\
" > /bin/run_notebook.sh

CMD bash /bin/run_notebook.sh

FROM coresdk AS runtime_pre

COPY --from=precompile /opt/bigdft/sources /opt/bigdft/sources

RUN compile_bigdft-suite.sh

FROM sdk AS runtime

COPY --from=runtime_pre /opt/bigdft/install/ /opt/bigdft/install/

