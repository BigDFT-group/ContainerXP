FROM intel/oneapi AS base
LABEL maintainer bigdft-developers@lists.launchpad.net

RUN wget https://registrationcenter-download.intel.com/akdlm/IRC_NAS/063bda92-d923-4acd-8745-c40090f05217/intelpython3-2024.1.0_814-Linux-x86_64.sh
ENV INTELPYTHON /opt/intel/oneapi/intelpython3 

RUN sh intelpython3-2024.1.0_814-Linux-x86_64.sh -b -p $INTELPYTHON

ENV PYTHON $INTELPYTHON/bin/python3
ENV PATH "$INTELPYTHON/bin:$PATH"

#install needed dependencies
RUN apt update || true && \
    apt-get install -y \
    autoconf curl libpcre3-dev git doxygen zlib1g-dev libbz2-dev gettext libmount-dev bison flex libfreetype6-dev intltool libtool git-lfs intel-hpckit

ENV LD_LIBRARY_PATH /usr/lib/x86_64-linux-gnu/:$LD_LIBRARY_PATH

ENV I_MPI_FABRICS shm

RUN git config --global user.email "bigdft-project@gmail.com"
RUN git config --global user.name "BigDFT developer"
RUN git lfs install

WORKDIR /opt/bigdft

ENV BIGDFT_SUITE_SOURCES /opt/bigdft/sources

ENV JHBUILD_RUN_AS_ROOT "please do it"

FROM base AS precompile

ENV BIGDFT_SUITE_TARBALLDIR /opt/bigdft/bigdft-upstream-tarballs

#RUN git clone --depth 1 -b total https://gitlab.com/l_sim/bigdft-upstream-tarballs.git $BIGDFT_SUITE_TARBALLDIR

ENV CONTAINER_DATE 24-10-20-1

RUN git clone --depth 1 -b devel https://gitlab.com/l_sim/bigdft-suite.git $BIGDFT_SUITE_SOURCES

ENV JHBUILD_COMMAND "$PYTHON $BIGDFT_SUITE_SOURCES/bundler/jhbuild.py"

ENV BIGDFT_SUITE_CHECKOUTROOT /opt/bigdft/checkoutdir

RUN mkdir -p $BIGDFT_SUITE_CHECKOUTROOT

RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules setup GaIn  libxc
RUN cd $BIGDFT_SUITE_CHECKOUTROOT/GaIn-1.0 && autoreconf -fi && cd -
RUN cd $BIGDFT_SUITE_CHECKOUTROOT/libxc && autoreconf -fi && cd -

FROM precompile as core-upstream

RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules build core-upstream-suite
RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules clean core-upstream-suite

FROM precompile as client-upstream

RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules --conditions=-amber,+cython3 build client-upstream-suite
RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules --conditions=-amber,+cython3 clean --skip=simtk client-upstream-suite

FROM precompile AS upstream

RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules --conditions=-amber,+cython3 build upstream-suite
RUN $JHBUILD_COMMAND -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules --conditions=-amber,+cython3 clean --skip=simtk upstream-suite

FROM upstream as sdk

RUN DEBIAN_FRONTEND="noninteractive" TZ="Europe/Paris" apt install -y python3-tk
RUN echo "\n\
cd /opt/bigdft; python3 /opt/bigdft/sources/Installer.py build -f oneapi-hpc.rc -y; cd -\n\
" > /bin/compile_bigdft-suite.sh

RUN chmod +x /bin/compile_bigdft-suite.sh

#install needed dependencies
RUN apt update || true && \
    apt-get install -y \
    gdb valgrind vim graphviz sshpass intel-opencl-icd intel-oneapi-dpcpp-ct

RUN apt-get install rsync --no-install-recommends -y

EXPOSE 8888

RUN pip install jupyterlab py3dmol xlrd openpyxl mplcursors clustergrammer_widget remotemanager networkx seaborn pillow python-constraint tinydb parmed lxml pint typing-extensions importlib_resources cachetools cairosvg pubchempy propka bokeh xlsxwriter

#RUN for f in /opt/intel/oneapi/intelpython/python3.9/lib/*tinfo.*; do mv $f $f.bak;done

RUN echo "\n\ 
   source /opt/bigdft/install/bin/bigdftvars.sh\n\
   ulimit -s unlimited\n\
   jupyter-lab --ip=0.0.0.0 --allow-root --NotebookApp.token=bigdft --no-browser\n\
" > /bin/run_notebook.sh

CMD bash /bin/run_notebook.sh

FROM sdk AS runtime_pre

COPY --from=precompile /opt/bigdft/sources /opt/bigdft/sources

RUN compile_bigdft-suite.sh

FROM sdk AS runtime

COPY --from=runtime_pre /opt/bigdft/install/ /opt/bigdft/install/

