#
# This Dockerfile installs a BigDFT-ready build environment with GPU support
# It does not provide BigDFT. V_sim-dev can be conpiled with BigDFT in this container
#

#build stage : heavy image, will be discarded after build 
FROM nvidia/cuda:9.1-cudnn7-devel-ubuntu16.04
LABEL maintainer bigdft-developers@lists.launchpad.net 

WORKDIR /opt/bigdft

#install needed dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        autoconf autotools-dev automake \
        bzr gfortran libblas-dev liblapack-dev \
        fort77 build-essential curl python-pip python-dev \
        bison libz-dev pkg-config python-setuptools \
        libpcre3-dev libtool libglib2.0-dev libltdl-dev \
        gnome-common ipython ipython-notebook \
        python-matplotlib ocl-icd-libopencl1 vim wget \
        net-tools ethtool perl lsb-release iproute2 \
        pciutils libnl-route-3-200 kmod libnuma1 \
        lsof linux-headers-generic python-libxml2 \
        graphviz tk tcl swig chrpath dpatch flex cmake libxml2-dev\
        ssh gdb strace git libglu1-mesa-dev pkg-config libglib2.0-dev \
	libnetcdf-dev valgrind gnuplot \
	intltool libtool gtk-doc-tools libgtk-3-dev \
	python-gobject-dev \
	libgirepository1.0-dev 

#build openmpi with gpudirect
RUN wget https://www.open-mpi.org/software/ompi/v3.0/downloads/openmpi-3.0.0.tar.gz \
    && tar xzf openmpi-3.0.0.tar.gz && cd openmpi-3.0.0 && mkdir build && cd build \
    && ../configure --with-cuda=/usr/local/cuda --prefix=/usr/local/mpi \
    && make -j$(nproc) && make install \
    && cd /opt/bigdft && rm -rf /opt/bigdft/openmpi-3.0.*

SHELL ["/bin/bash", "-c"]
ENV SHELL /bin/bash

#install jupyter
#upgrade pip to avoid annoying message
RUN pip install --upgrade pip && \ 
    pip install scipy jupyter

EXPOSE 8888

#install OpenCL icd file
RUN mkdir -p /etc/OpenCL/vendors && \
    echo "libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd

ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility

#RUN cp /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/lib/libcuda.so.1
#RUN cp /usr/local/cuda/lib64/stubs/libnvidia-ml.so /usr/local/lib/libnvidia-ml.so.1

#update ldconfig as /usr/local/lib may not be in the path
RUN echo "/usr/local/mpi/lib" > /etc/ld.so.conf.d/mpi.conf
#RUN echo "/bigdft/lib" > /etc/ld.so.conf.d/bigdft.conf
RUN ldconfig

ENV PATH "/usr/local/mpi/bin:${PATH}"

CMD jupyter-notebook --ip=0.0.0.0 --allow-root --NotebookApp.token=bigdft --no-browser

#jhbuild is allergic to root
RUN useradd -ms /bin/bash bigdft
USER bigdft
ENV XDG_CACHE_HOME /home/bigdft/.cache/
WORKDIR /home/bigdft 
RUN MPLBACKEND=Agg python -c "import matplotlib.pyplot"
