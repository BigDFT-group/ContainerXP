FROM bigdft/sdk:oneapi-hpc-ground AS base
LABEL maintainer=bigdft-developers@lists.launchpad.net

#install needed dependencies
RUN apt update || true && \
    apt-get install -y \
    git git-lfs autoconf libtool

RUN git config --global user.email "bigdft-project@gmail.com"
RUN git config --global user.name "BigDFT developer"
RUN git lfs install

WORKDIR /opt/bigdft

ENV BIGDFT_SUITE_SOURCES=/opt/bigdft/sources

ENV JHBUILD_RUN_AS_ROOT="please do it"

ENV BIGDFT_SUITE_TARBALLDIR=/opt/bigdft/bigdft-upstream-tarballs

ENV JHBUILD_COMMAND="$PYTHON $BIGDFT_SUITE_SOURCES/bundler/jhbuild.py"

ENV INSTALLATION_COMMAND="$JHBUILD_COMMAND -m $BIGDFT_SUITE_SOURCES/modulesets/upstream.modules -f $BIGDFT_SUITE_SOURCES/rcfiles/oneapi-hpc-upstream.rc"

ENV BIGDFT_SUITE_CHECKOUTROOT=/opt/bigdft/checkoutdir

ENV LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/:$LD_LIBRARY_PATH

RUN mkdir -p $BIGDFT_SUITE_CHECKOUTROOT

FROM base AS precompile-yaml

ENV CONTAINER_DATE=24-10-14-3

#RUN git clone --depth 1 -b total https://gitlab.com/l_sim/bigdft-upstream-tarballs.git $BIGDFT_SUITE_TARBALLDIR

RUN git clone --depth 1 -b devel https://gitlab.com/l_sim/bigdft-suite.git $BIGDFT_SUITE_SOURCES

RUN $INSTALLATION_COMMAND build PyYAML
RUN $INSTALLATION_COMMAND clean PyYAML

FROM precompile-yaml AS upstream-core-base

RUN $INSTALLATION_COMMAND --conditions=+sycl build core-upstream-suite
RUN $INSTALLATION_COMMAND --conditions=+sycl clean core-upstream-suite

FROM upstream-core-base AS upstream-core

RUN $INSTALLATION_COMMAND --conditions=+python,+devdoc,+simulation,+sirius build core-upstream-suite
RUN $INSTALLATION_COMMAND --conditions=+python,+devdoc,+simulation,+sirius clean core-upstream-suite

FROM precompile-yaml AS upstream-client-base

RUN $INSTALLATION_COMMAND --conditions=+ase,+vdw,+dill,+spg build  client-upstream-suite client-bio-baseplugins
RUN $INSTALLATION_COMMAND --conditions=+ase,+vdw,+dill,+spg clean  client-upstream-suite client-bio-baseplugins

FROM upstream-client-base AS upstream-client

#install needed dependencies
RUN apt update || true && \
    DEBIAN_FRONTEND="noninteractive" TZ="Europe/Paris" apt-get install -y \
    libpcre3-dev doxygen zlib1g-dev libbz2-dev libfreetype6-dev bison flex python3-tk

RUN pip install matplotlib

RUN $INSTALLATION_COMMAND --conditions=+bio,+devdoc,+boost,+amber build  --skip=rdkit client-upstream-suite
RUN $INSTALLATION_COMMAND --conditions=+bio,+devdoc,+boost,+amber clean  --skip=simtk client-upstream-suite

FROM upstream-client-base AS upstream-suite-base

RUN $INSTALLATION_COMMAND --conditions=+sycl build upstream-suite
RUN $INSTALLATION_COMMAND --conditions=+sycl clean upstream-suite

FROM upstream-client AS upstream-suite

RUN $INSTALLATION_COMMAND --conditions=+python,+devdoc,+simulation,+sirius build upstream-suite
RUN $INSTALLATION_COMMAND --conditions=+python,+devdoc,+simulation,+sirius clean upstream-suite


FROM upstream-core-base AS runtime-base

#install needed dependencies
RUN apt update || true && \
    apt-get install -y \
    curl gettext libmount-dev intltool intel-hpckit


RUN $INSTALLATION_COMMAND setup GaIn  libxc
RUN cd $BIGDFT_SUITE_CHECKOUTROOT/GaIn-1.0 && autoreconf -fi && cd -
RUN cd $BIGDFT_SUITE_CHECKOUTROOT/libxc && autoreconf -fi && cd -

FROM precompile AS core-upstream

RUN $INSTALLATION_COMMAND build core-upstream-suite
RUN $INSTALLATION_COMMAND core-upstream-suite

FROM precompile AS client-upstream

RUN $INSTALLATION_COMMAND --conditions=-amber,+cython3 build client-upstream-suite
RUN $INSTALLATION_COMMAND --conditions=-amber,+cython3 clean --skip=simtk client-upstream-suite

FROM precompile AS upstream

RUN $INSTALLATION_COMMAND --conditions=-amber,+cython3 build upstream-suite
RUN $INSTALLATION_COMMAND --conditions=-amber,+cython3 clean --skip=simtk upstream-suite

FROM upstream AS sdk

RUN echo "\n\
cd /opt/bigdft; $PYTHON /opt/bigdft/sources/Installer.py build -f oneapi-hpc.rc -y; cd -\n\
" > /bin/compile_bigdft-suite.sh

RUN chmod +x /bin/compile_bigdft-suite.sh

#install needed dependencies
RUN apt update || true && \
    apt-get install -y \
    gdb valgrind vim graphviz sshpass intel-opencl-icd intel-oneapi-dpcpp-ct

RUN apt-get install rsync --no-install-recommends -y

RUN ln -s /usr/lib/x86_64-linux-gnu/libpthread.so.0 /usr/lib/x86_64-linux-gnu/libpthread.so


EXPOSE 8888

RUN pip install jupyterlab py3dmol xlrd openpyxl mplcursors clustergrammer_widget remotemanager networkx seaborn pillow python-constraint tinydb parmed lxml pint typing-extensions importlib_resources cachetools cairosvg pubchempy propka bokeh xlsxwriter

#RUN for f in /opt/intel/oneapi/intelpython/python3.9/lib/*tinfo.*; do mv $f $f.bak;done

RUN echo "\n\ 
   source /opt/bigdft/install/bin/bigdftvars.sh\n\
   ulimit -s unlimited\n\
   jupyter-lab --ip=0.0.0.0 --allow-root --NotebookApp.token=bigdft --no-browser\n\
" > /bin/run_notebook.sh

CMD bash /bin/run_notebook.sh

FROM sdk AS runtime_pre

COPY --from=precompile /opt/bigdft/sources /opt/bigdft/sources

RUN compile_bigdft-suite.sh

FROM sdk AS runtime

COPY --from=runtime_pre /opt/bigdft/install/ /opt/bigdft/install/

